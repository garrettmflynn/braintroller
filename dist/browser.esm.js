var l={windows:!0,mac:!0,linux:!0,ios:!1,android:!1},m={windows:["lights_mon_up","lights_mon_down","lights_kbd_toggle","lights_kbd_up","lights_kbd_down"],mac:["printscreen","insert"],linux:["numpad_0","numpad_1","numpad_2","numpad_3","numpad_4","numpad_5","numpad_6","numpad_7","numpad_8","numpad_9"]},h={linux:["audio_rewind","audio_forward","audio_repeat","audio_random"]};var f=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","`","-","=","[","]","\\",";","'",",",".","/","backspace","delete","enter","tab","escape","up","down","right","left","home","end","pageup","pagedown","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","command","alt","control","shift","right_shift","space","printscreen","insert","audio_mute","audio_vol_down","audio_vol_up","audio_play","audio_stop","audio_pause","audio_prev","audio_next","audio_rewind","audio_forward","audio_repeat","audio_random","numpad_0","numpad_1","numpad_2","numpad_3","numpad_4","numpad_5","numpad_6","numpad_7","numpad_8","numpad_9","lights_mon_up","lights_mon_down","lights_kbd_toggle","lights_kbd_up","lights_kbd_down"];function p(r=window.navigator?.userAgentData?.platform||window.navigator.platform){var s=window.navigator.userAgent,e=["Macintosh","MacIntel","MacPPC","Mac68K","macOS","darwin"],i=["Win32","Win64","Windows","WinCE","win32"],n=["iPhone","iPad","iPod"],o=r;return e.indexOf(r)!==-1?"mac":n.indexOf(r)!==-1?"ios":i.indexOf(r)!==-1?"windows":/Android/.test(s)?"android":/Linux/.test(r)?"linux":o}var g=class{constructor(s="localhost",e=8765){this.status="disconnected";this.#e=[];this.#s={};this.connect=(s=this.host,e=this.port)=>{if(this.status==="disconnected"){this.host=s,this.port=e;let i=`ws://${s}:${e}`;console.warn(`Trying to connect to ${i}`);let n=new WebSocket(i);this.status="connecting",n.onmessage=o=>{let{id:a,payload:d,error:c}=JSON.parse(o.data),t=this.#s[a];t&&(c?t.reject(c):t.resolve(d),delete this.#s[a]),this.onmessage&&this.onmessage.call(this.ws,o)},n.addEventListener("open",async o=>{this.ws=n,console.warn(`Connected to ${i}`),this.status="connected",this.#e.forEach(t=>this.send(t.command,t.payload)),this.#e=[];let a=await this.send("platform"),d=this.os=p(a),c=Object.entries(l).filter(([t,u])=>t!==d&&u).map(([t])=>t);this.validMessages=l[d]?[...f,...h[d]??[]].filter(t=>!m[d]?.includes(t)&&!c.find(u=>h[u]?.includes(t))):[],this.onopen&&this.onopen.call(this.ws,o)}),n.addEventListener("close",o=>{console.warn(`Disconnected from ${i}`),this.status="disconnected",this.onclose&&this.onclose.call(this.ws,o)}),setTimeout(()=>{this.status==="connecting"&&n.close()},2e3)}};this.disconnect=()=>{this.status==="connected"&&(this.status="disconnecting",this.ws.close())};this.send=(s,e)=>{if(this.status==="connected"){if(s==="key"&&!this.validMessages.includes(e)&&(e===" "&&(e="space"),e==="Enter"&&(e="enter"),e==="ArrowUp"&&(e="up"),e==="ArrowDown"&&(e="down"),e==="ArrowLeft"&&(e="left"),e==="ArrowRight"&&(e="right"),!this.validMessages.includes(e))){console.warn(`${e} is not a valid key for ${this.os}`);return}let i=Math.random().toString(36).substr(2,9),n={command:s,id:i};return e&&(n.payload=e),this.ws.send(JSON.stringify(n)),new Promise((o,a)=>this.#s[i]={resolve:o,reject:a})}else this.status==="connecting"&&this.#e.push({command:s,payload:e})};this.host=s,this.port=e}#e;#s;#t;get onmessage(){return this.#t}set onmessage(s){this.#t=s}#n;get onopen(){return this.#n}set onopen(s){this.#n=s}#o;get onclose(){return this.#o}set onclose(s){this.#o=s}};export{g as Client,f as allKeys};
