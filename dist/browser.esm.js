var r={windows:!0,mac:!0,linux:!0,ios:!1,android:!1},u={windows:["lights_mon_up","lights_mon_down","lights_kbd_toggle","lights_kbd_up","lights_kbd_down"],mac:["printscreen","insert"],linux:["numpad_0","numpad_1","numpad_2","numpad_3","numpad_4","numpad_5","numpad_6","numpad_7","numpad_8","numpad_9"]},c={linux:["audio_rewind","audio_forward","audio_repeat","audio_random"]};var d=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","`","-","=","[","]","\\",";","'",",",".","/","backspace","delete","enter","tab","escape","up","down","right","left","home","end","pageup","pagedown","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","command","alt","control","shift","right_shift","space","printscreen","insert","audio_mute","audio_vol_down","audio_vol_up","audio_play","audio_stop","audio_pause","audio_prev","audio_next","numpad_0","numpad_1","numpad_2","numpad_3","numpad_4","numpad_5","numpad_6","numpad_7","numpad_8","numpad_9","lights_mon_up","lights_mon_down","lights_kbd_toggle","lights_kbd_up","lights_kbd_down"];function p(){var i=window.navigator.userAgent,t=window.navigator?.userAgentData?.platform||window.navigator.platform,e=["Macintosh","MacIntel","MacPPC","Mac68K","darwin","macOS"],o=["Win32","Win64","Windows","WinCE"],n=["iPhone","iPad","iPod"],s=t;return e.indexOf(t)!==-1?"mac":n.indexOf(t)!==-1?"ios":o.indexOf(t)!==-1?"windows":/Android/.test(i)?"android":/Linux/.test(t)?"linux":s}var a=p(),l=r[a]?[...d,...c[a]??[]].filter(i=>!u[a]?.includes(i)):[],h=class{constructor(t="localhost",e=8765){this.status="disconnected";this.validMessages=l;this.#t=[];this.connect=(t=this.host,e=this.port)=>{if(this.status==="disconnected"){this.host=t,this.port=e;let o=`ws://${t}:${e}`;console.warn(`Trying to connect to ${o}`);let n=new WebSocket(o);this.status="connecting",n.onmessage=s=>{this.onmessage&&this.onmessage.call(this.ws,s)},n.addEventListener("open",s=>{this.ws=n,console.warn(`Connected to ${o}`),this.status="connected",this.#t.forEach(m=>this.send(m)),this.#t=[],this.onopen&&this.onopen.call(this.ws,s)}),n.addEventListener("close",s=>{this.status="disconnected"}),setTimeout(()=>{this.status==="connecting"&&n.close()},2e3)}};this.disconnect=()=>{this.status==="connected"&&(this.status="disconnecting",this.ws.close())};this.send=t=>{if(this.status==="connected"){if(!l.includes(t)){console.warn(`${t} is not a valid key for ${a}`);return}typeof t=="object"&&(t=JSON.stringify(t)),this.ws.send(t)}else this.#t.push(t)};this.host=t,this.port=e}#t;#n;#e;get onmessage(){return this.#n}set onmessage(t){this.#n=t}get onopen(){return this.#e}set onopen(t){this.#e=t}};export{h as Client,d as allKeys};
